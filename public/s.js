var EVENT,HOST,HOST_URL,VERSION,_get,con,get,protocol,sleep;con=console,VERSION=1,HOST=location.host,{protocol,host:HOST}=location,HOST_URL=protocol+`//${HOST}/`,sleep=e=>new Promise(r=>setTimeout(r,e)),_get=async e=>{var r,n,i,t,c;if(c=new URL(e.url),c.host!==HOST){r={credentials:"omit",mode:"cors"};try{t=await fetch(e,r)}catch(a){n=a,delete r.mode,t=await fetch(e,r)}}else t=await fetch(e);return t&&(t.ok=[200,304].indexOf(t.status)>=0,t.ok&&(i=new Response(t.clone().body,t),i.headers.set("_",parseInt(new Date/1e3).toString(16)),caches.open(VERSION).then(a=>a.put(e,i)))),t},get=async e=>{var r,n;for(n=0;;)try{return await _get(e)}catch(i){if(r=i,n++>9)throw r;con.error(n,e,r)}},EVENT={install:e=>{e.waitUntil(skipWaiting())},activate:e=>{e.waitUntil(clients.claim())},fetch:e=>{var r,n,i,t,c;t=e.request,{url:c,method:n}=t,c.startsWith("http")&&(["GET","OPTIONS"].indexOf(n)<0||t.headers.get("accept").includes("stream")||({host:r}=c=new URL(c),{pathname:i}=c,r===HOST&&!i.includes(".")&&(t=new Request("/",{method:n})),e.respondWith(caches.match(t).then(async a=>{var o,h,s,u;if(a){if(i==="/v")return _get(t),a;for(o=a.headers.get("cache-control")||"";!(o&&(o==="no-cache"||(u=/max-age=(\d+)/.exec(o),u&&new Date/1e3-parseInt(a.headers.get("_"),16)-u[1]>0)));)return a}try{s=await get(t)}catch(l){if(h=l,a)return con.error(h),a;throw h}return a&&a.ok&&!s.ok?a:s}))))}},(()=>{var e,r;for(e in EVENT)r=EVENT[e],addEventListener(e,r)})();
